
var aoi = geometry2


function applyScaleFactors(image) {
  var opticalBands = image.select('SR_B.').multiply(0.0000275).add(-0.2);
  var thermalBands = image.select('ST_B.*').multiply(0.00341802).add(149.0);
  return image.addBands(opticalBands, null, true)
              .addBands(thermalBands, null, true);
}

function cloudMask(image) {
  // Define cloud shadow and cloud bitmasks (Bits 3 and 5)
  var cloudShadowBitmask = (1 << 3);
  var cloudBitmask = (1 << 5);

  // Select the Quality Assessment (QA) band for pixel quality information
  var qa = image.select('QA_PIXEL');

  // Create a binary mask to identify clear conditions (both cloud and cloud shadow bits set to 0)
  var mask = qa.bitwiseAnd(cloudShadowBitmask).eq(0)
                .and(qa.bitwiseAnd(cloudBitmask).eq(0));

  // Update the original image, masking out cloud and cloud shadow-affected pixels
  return image.updateMask(mask);
}

var imageRGB = ee.ImageCollection("LANDSAT/LC08/C02/T1_L2")
              .filterBounds(aoi)
              .filterDate('2022-01-01','2023-12-31')
              .map(applyScaleFactors)
              .map(cloudMask)
              .median() // podemos testar outros resumos numéricos aqui **
              .clip(aoi);




var visualization = {
  bands: ['SR_B4', 'SR_B3', 'SR_B2'],
  min: 0.0,
  max: 0.15,
};

Map.addLayer(imageRGB, visualization, 'True Color 432');




Export.image.toDrive({
  image: imageRGB,
  description: 'rgb_2022_2023',
  folder: 'mapacalor_transcarioca', // mesmo que no código anterior (Landsat_meanTemperature)
  fileNamePrefix: 'rgb_2022_2023',
  region: aoi,
  scale: 30,
  fileFormat: 'tif'
});

